services:
  payload:
    image: node:20-alpine
    ports:
      - '5000:3000'
    volumes:
      - .:/home/node/app
      - ../../packages:/home/node/app/node_modules/@payloadcms
      - ../../tools:/home/node/app/tools
      - node_modules:/home/node/app/node_modules
      - next_cache:/home/node/app/.next/cache
      # for persist ... place volumes in dokploy service files folder
      #- ../../../files/node_modules:/home/node/app/node_modules
      #- ../../../files/next_cache:/home/node/app/.next
    working_dir: /home/node/app/
    command: sh -c "corepack enable && corepack prepare pnpm@9.0.0 --activate && pnpm install && pnpm dev"
    #command: sh -c "corepack enable && corepack prepare pnpm@9.0.0 --activate && pnpm install && pnpm build && pnpm start"
    depends_on:
      # - postgres
      - mongo
    env_file:
      - .env

  # Ensure your DATABASE_URI uses 'postgresql' as the hostname ie. postgresql://127.0.0.1:5432/your-database-name
  #postgres:
  #  restart: always
  #  image: postgres:latest
  #  volumes:
  #    - pgdata:/var/lib/postgresql/data
  #  ports:
  #    - '5432:5432'
  #  environment:
  #    - POSTGRES_USER=${POSTGRES_USER}
  #    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #    - POSTGRES_DB=${POSTGRES_DB}

  #Uncomment the following to use mongodb
  mongo:
    image: mongo:latest
    ports:
      - '28017:27017'
    command:
      - --storageEngine=wiredTiger
    volumes:
      - mongo_data:/data/db
      # for persist ... place volumes in dokploy service files folder
      #- ../../../files/mongo_data:/data/db
    logging:
      driver: none

volumes:
  #pgdata:
  mongo_data:
  node_modules:
  next_cache:
